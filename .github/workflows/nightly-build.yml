# .github/workflows/nightly-build.yml
name: Nightly Debug Build
on:
  workflow_dispatch:
  schedule:
    # 毎日UTCの0時（日本時間9時）に実行
    - cron: "0 0 * * *"

jobs:
  build:
    strategy:
      matrix:
        os:
          [
            { name: "windows", image: "windows-latest" },
            { name: "macos", image: "macos-latest" },
          ]
    runs-on: ${{ matrix.os.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Update version to nightly
        run: |
          node -e "
            const fs = require('fs');
            const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            const currentVersion = packageJson.version;
            const date = new Date().toISOString().split('T')[0].replace(/-/g, '');
            packageJson.version = currentVersion + '-nightly.' + date;
            fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
            console.log('Version updated to: ' + packageJson.version);
          "

      - name: Build app
        run: npm run make

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: floatinfo-nightly-${{ matrix.os.name }}
          path: |
            out/make/**/*.exe
            out/make/**/*.zip
            out/make/**/*.dmg
          if-no-files-found: warn

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'workflow_dispatch'
        with:
          tag_name: nightly-${{ github.run_number }}
          name: Nightly Build ${{ github.run_number }}
          body: |
            Nightly debug build created on ${{ github.event.repository.updated_at }}
            This is an automated debug build and not intended for production use.
          files: |
            out/make/**/*.exe
            out/make/**/*.zip
            out/make/**/*.dmg
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
